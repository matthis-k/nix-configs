return {
    {
        "lewis6991/gitsigns.nvim",
        event = { "BufReadPre", "BufNewFile" },
        keys = {
            { '<leader>gB', "<cmd>Gitsigns toggle_current_line_blame<cr>", desc = "toggle blame line" },
            { '<leader>gD', "<cmd>Gitsigns diffthis<cr>",                  desc = "diff" },
            { '<leader>gR', "<cmd>Gitsigns reset_buffer<cr>",              desc = "reset buffer" },
            { '<leader>gS', "<cmd>Gitsigns stage_buffer<cr>",              desc = "stage buffer" },
            { '<leader>gd', "<cmd>Gitsigns toggle_deleted<cr>",            desc = "toggle deleted" },
            { '<leader>gp', "<cmd>Gitsigns preview_hunk<cr>",              desc = "preview hunk" },
            { '<leader>gr', "<cmd>Gitsigns reset_hunk",                    desc = "reset hunk",       mode = 'v' },
            { '<leader>gr', "<cmd>Gitsigns reset_hunk<cr>",                desc = "reset hunk" },
            { '<leader>gs', "<cmd>Gitsigns stage_hunk<cr>",                desc = "stage hunk" },
            { '<leader>gs', "<cmd>Gitsigns stage_hunk<cr>",                desc = "stage hunk",       mode = 'v' },
            { '<leader>gu', "<cmd>Gitsigns undo_stage_hunk<cr>",           desc = "undo stage hunk" },
            { '<leader>gw', "<cmd>Gitsigns toggle_word_diff<cr>",          desc = "toggle word diff" },
        },
        opts = {
            signs_staged = {
                add = { text = " ▕" },
                change = { text = " ▕" },
                delete = { text = " ▁" },
                topdelete = { text = " ▔" },
                changedelete = { text = " ▕" },
                untracked = { text = " ▕" },
            },
            signs = {
                add = { text = " ▕" },
                change = { text = " ▕" },
                delete = { text = " ▁" },
                topdelete = { text = " ▔" },
                changedelete = { text = " ▕" },
                untracked = { text = " ▕" },
            },
            signcolumn = true,
            numhl = false,
            linehl = false,
            word_diff = false,
            watch_gitdir = {
                interval = 1000,
                follow_files = true,
            },
            attach_to_untracked = true,
            current_line_blame = false,
            current_line_blame_opts = {
                virt_text = true,
                virt_text_pos = "eol",
                delay = 1000,
                ignore_whitespace = false,
            },
            current_line_blame_formatter = "<author>, <author_time:%Y-%m-%d> - <summary>",
            sign_priority = 6,
            update_debounce = 100,
            status_formatter = nil,
            max_file_length = 40000,
            preview_config = {
                border = require("core.visuals").border,
                style = "minimal",
                relative = "cursor",
                row = 0,
                col = 1,
            },
        },
    },
}
